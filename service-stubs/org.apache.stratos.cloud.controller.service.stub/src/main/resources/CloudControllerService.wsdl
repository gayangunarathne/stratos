<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:ax29="http://kubernetes.common.stratos.apache.org/xsd"
                  xmlns:ns="http://impl.services.controller.cloud.stratos.apache.org"
                  xmlns:ax27="http://topology.domain.messaging.stratos.apache.org/xsd"
                  xmlns:ax25="http://common.stratos.apache.org/xsd"
                  xmlns:ax23="http://domain.controller.cloud.stratos.apache.org/xsd"
                  xmlns:ax21="http://exception.controller.cloud.stratos.apache.org/xsd"
                  xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://org.apache.axis2/xsd"
                  xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl"
                  xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/"
                  xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/"
                  targetNamespace="http://impl.services.controller.cloud.stratos.apache.org">
    <wsdl:types>
        <xs:schema xmlns:ax28="http://topology.domain.messaging.stratos.apache.org/xsd"
                   xmlns:ax211="http://kubernetes.common.stratos.apache.org/xsd"
                   xmlns:ax24="http://domain.controller.cloud.stratos.apache.org/xsd"
                   xmlns:ax22="http://exception.controller.cloud.stratos.apache.org/xsd"
                   attributeFormDefault="qualified" elementFormDefault="qualified"
                   targetNamespace="http://impl.services.controller.cloud.stratos.apache.org">
            <xs:import namespace="http://exception.controller.cloud.stratos.apache.org/xsd"/>
            <xs:import namespace="http://domain.controller.cloud.stratos.apache.org/xsd"/>
            <xs:import namespace="http://topology.domain.messaging.stratos.apache.org/xsd"/>
            <xs:import namespace="http://kubernetes.common.stratos.apache.org/xsd"/>
            <xs:element name="CloudControllerServiceInvalidServiceGroupException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidServiceGroupException" nillable="true"
                                    type="ax21:InvalidServiceGroupException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceGroupResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax23:ServiceGroup"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidCartridgeTypeException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidCartridgeTypeException" nillable="true"
                                    type="ax21:InvalidCartridgeTypeException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="undeployCartridgeDefinition">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="cartridgeType" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="deployServiceGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="servicegroup" nillable="true" type="ax23:ServiceGroup"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="undeployServiceGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceGroupSubGroups">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceGroupSubGroupsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceGroupCartridges">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceGroupCartridgesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceGroupDependencies">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceGroupDependenciesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax23:Dependencies"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceUnregisteredCartridgeException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="UnregisteredCartridgeException" nillable="true"
                                    type="ax21:UnregisteredCartridgeException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidIaasProviderException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidIaasProviderException" nillable="true"
                                    type="ax21:InvalidIaasProviderException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="startInstance">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="memberContext" nillable="true" type="ax23:MemberContext"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="startInstanceResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax23:MemberContext"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidMemberException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidMemberException" nillable="true"
                                    type="ax21:InvalidMemberException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="terminateInstance">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="memberId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidClusterException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidClusterException" nillable="true"
                                    type="ax21:InvalidClusterException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="terminateAllInstances">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="registerService">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="registrant" nillable="true" type="ax23:Registrant"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="registerServiceResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getRegisteredCartridges">
                <xs:complexType>
                    <xs:sequence/>
                </xs:complexType>
            </xs:element>
            <xs:element name="getRegisteredCartridgesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getCartridgeInfo">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="cartridgeType" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getCartridgeInfoResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax23:CartridgeInfo"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceUnregisteredClusterException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="UnregisteredClusterException" nillable="true"
                                    type="ax21:UnregisteredClusterException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="unregisterService">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="unregisterDockerService">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidPartitionException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidPartitionException" nillable="true"
                                    type="ax21:InvalidPartitionException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="validateDeploymentPolicy">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="cartridgeType" nillable="true" type="xs:string"/>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="partitions" nillable="true"
                                    type="ax23:Partition"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="validateDeploymentPolicyResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="validatePartition">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="partition" nillable="true" type="ax23:Partition"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="validatePartitionResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getClusterContext">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getClusterContextResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax23:ClusterContext"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="startContainers">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="containerClusterContext" nillable="true"
                                    type="ax23:ContainerClusterContext"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="startContainersResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true"
                                    type="ax23:MemberContext"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidCartridgeDefinitionException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidCartridgeDefinitionException" nillable="true"
                                    type="ax21:InvalidCartridgeDefinitionException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="deployCartridgeDefinition">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="cartridgeConfig" nillable="true" type="ax23:CartridgeConfig"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="terminateAllContainers">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="terminateAllContainersResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true"
                                    type="ax23:MemberContext"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateContainers">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="replicas" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateContainersResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true"
                                    type="ax23:MemberContext"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateClusterStatus">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="instanceId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="status" nillable="true" type="ax27:ClusterStatus"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceMemberTerminationFailedException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="MemberTerminationFailedException" nillable="true"
                                    type="ax21:MemberTerminationFailedException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="terminateContainer">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="memberId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="terminateContainerResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax23:MemberContext"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceApplicationClusterRegistrationException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="ApplicationClusterRegistrationException" nillable="true"
                                    type="ax21:ApplicationClusterRegistrationException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="createApplicationClusters">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="appId" nillable="true" type="xs:string"/>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="appClustersContexts" nillable="true"
                                    type="ax23:ApplicationClusterContext"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceClusterInstanceCreationException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="ClusterInstanceCreationException" nillable="true"
                                    type="ax21:ClusterInstanceCreationException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="createClusterInstance">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="serviceType" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="alias" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="instanceId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="partitionId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="networkPartitionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getAllKubernetesGroups">
                <xs:complexType>
                    <xs:sequence/>
                </xs:complexType>
            </xs:element>
            <xs:element name="getAllKubernetesGroupsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true"
                                    type="ax29:KubernetesGroup"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceNonExistingKubernetesGroupException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="NonExistingKubernetesGroupException" nillable="true"
                                    type="ax21:NonExistingKubernetesGroupException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getKubernetesGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesGroupId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getKubernetesGroupResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax29:KubernetesGroup"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getMasterForKubernetesGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesGroupId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getMasterForKubernetesGroupResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax29:KubernetesMaster"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getHostsForKubernetesGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesGroupId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getHostsForKubernetesGroupResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true"
                                    type="ax29:KubernetesHost"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidKubernetesGroupException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidKubernetesGroupException" nillable="true"
                                    type="ax21:InvalidKubernetesGroupException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addKubernetesGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesGroup" nillable="true" type="ax29:KubernetesGroup"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addKubernetesGroupResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidKubernetesHostException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidKubernetesHostException" nillable="true"
                                    type="ax21:InvalidKubernetesHostException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addKubernetesHost">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesGroupId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="kubernetesHost" nillable="true" type="ax29:KubernetesHost"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addKubernetesHostResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="removeKubernetesGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesGroupId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="removeKubernetesGroupResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceNonExistingKubernetesHostException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="NonExistingKubernetesHostException" nillable="true"
                                    type="ax21:NonExistingKubernetesHostException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="removeKubernetesHost">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesHostId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="removeKubernetesHostResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidKubernetesMasterException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidKubernetesMasterException" nillable="true"
                                    type="ax21:InvalidKubernetesMasterException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceNonExistingKubernetesMasterException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="NonExistingKubernetesMasterException" nillable="true"
                                    type="ax21:NonExistingKubernetesMasterException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateKubernetesMaster">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesMaster" nillable="true" type="ax29:KubernetesMaster"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateKubernetesMasterResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateKubernetesHost">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesHost" nillable="true" type="ax29:KubernetesHost"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateKubernetesHostResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema xmlns:ax210="http://common.stratos.apache.org/xsd" attributeFormDefault="qualified"
                   elementFormDefault="qualified" targetNamespace="http://kubernetes.common.stratos.apache.org/xsd">
            <xs:import namespace="http://common.stratos.apache.org/xsd"/>
            <xs:complexType name="KubernetesGroup">
                <xs:sequence>
                    <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="groupId" nillable="true" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="kubernetesHosts" nillable="true"
                                type="ax29:KubernetesHost"/>
                    <xs:element minOccurs="0" name="kubernetesMaster" nillable="true" type="ax29:KubernetesMaster"/>
                    <xs:element minOccurs="0" name="portRange" nillable="true" type="ax29:PortRange"/>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax210:Properties"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="KubernetesHost">
                <xs:sequence>
                    <xs:element minOccurs="0" name="hostId" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="hostIpAddress" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="hostname" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax210:Properties"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="KubernetesMaster">
                <xs:complexContent>
                    <xs:extension base="ax29:KubernetesHost">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="endpoint" nillable="true" type="xs:string"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="PortRange">
                <xs:sequence>
                    <xs:element minOccurs="0" name="lower" type="xs:int"/>
                    <xs:element minOccurs="0" name="upper" type="xs:int"/>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified"
                   targetNamespace="http://topology.domain.messaging.stratos.apache.org/xsd">
            <xs:complexType abstract="true" name="ClusterStatus">
                <xs:complexContent>
                    <xs:extension base="xs:Enum">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="code" type="xs:int"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
        </xs:schema>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified"
                   targetNamespace="http://common.stratos.apache.org/xsd">
            <xs:complexType name="Properties">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true"
                                type="ax25:Property"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Property">
                <xs:sequence>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified"
                   targetNamespace="http://exception.controller.cloud.stratos.apache.org/xsd">
            <xs:complexType name="InvalidServiceGroupException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidCartridgeTypeException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="UnregisteredCartridgeException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidIaasProviderException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidMemberException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidClusterException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="UnregisteredClusterException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidPartitionException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidCartridgeDefinitionException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="MemberTerminationFailedException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ApplicationClusterRegistrationException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ClusterInstanceCreationException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="NonExistingKubernetesGroupException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidKubernetesGroupException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidKubernetesHostException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="NonExistingKubernetesHostException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidKubernetesMasterException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="NonExistingKubernetesMasterException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema xmlns:ax26="http://common.stratos.apache.org/xsd" attributeFormDefault="qualified"
                   elementFormDefault="qualified"
                   targetNamespace="http://domain.controller.cloud.stratos.apache.org/xsd">
            <xs:import namespace="http://common.stratos.apache.org/xsd"/>
            <xs:complexType name="ServiceGroup">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="cartridges" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="dependencies" nillable="true" type="ax23:Dependencies"/>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="subGroups" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Dependencies">
                <xs:sequence>
                    <xs:element minOccurs="0" name="killBehaviour" nillable="true" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="startupOrders" nillable="true"
                                type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="MemberContext">
                <xs:sequence>
                    <xs:element minOccurs="0" name="allocatedIpAddress" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="cartridgeType" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="initTime" type="xs:long"/>
                    <xs:element minOccurs="0" name="instanceId" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="lbClusterId" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="memberId" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="networkPartitionId" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="nodeId" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="obsoleteExpiryTime" type="xs:long"/>
                    <xs:element minOccurs="0" name="obsoleteInitTime" type="xs:long"/>
                    <xs:element minOccurs="0" name="partition" nillable="true" type="ax23:Partition"/>
                    <xs:element minOccurs="0" name="privateIpAddress" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax25:Properties"/>
                    <xs:element minOccurs="0" name="publicIpAddress" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Partition">
                <xs:sequence>
                    <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="isPublic" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="partitionMax" type="xs:int"/>
                    <xs:element minOccurs="0" name="partitionMin" type="xs:int"/>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax25:Properties"/>
                    <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Registrant">
                <xs:sequence>
                    <xs:element minOccurs="0" name="autoScalerPolicyName" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="cartridgeType" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="deploymentPolicyName" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="payload" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="persistence" nillable="true" type="ax23:Persistence"/>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax25:Properties"/>
                    <xs:element minOccurs="0" name="tenantRange" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Persistence">
                <xs:sequence>
                    <xs:element minOccurs="0" name="persistanceRequired" type="xs:boolean"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="volumes" nillable="true" type="ax23:Volume"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Volume">
                <xs:sequence>
                    <xs:element minOccurs="0" name="device" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="iaasType" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="mappingPath" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="removeOntermination" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="size" type="xs:int"/>
                    <xs:element minOccurs="0" name="snapshotId" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="volumeId" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CartridgeInfo">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="appTypes" nillable="true"
                                type="ax23:AppType"/>
                    <xs:element minOccurs="0" name="baseDir" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="category" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="defaultAutoscalingPolicy" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="defaultDeploymentPolicy" nillable="true" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="deploymentDirs" nillable="true"
                                type="xs:string"/>
                    <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="isPublic" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="lbConfig" nillable="true" type="ax23:LoadbalancerConfig"/>
                    <xs:element minOccurs="0" name="multiTenant" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="persistence" nillable="true" type="ax23:Persistence"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="portMappings" nillable="true"
                                type="ax23:PortMapping"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true"
                                type="ax25:Property"/>
                    <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="serviceGroup" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AppType">
                <xs:sequence>
                    <xs:element minOccurs="0" name="appSpecificMapping" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="LoadbalancerConfig">
                <xs:sequence>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax25:Properties"/>
                    <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="PortMapping">
                <xs:sequence>
                    <xs:element minOccurs="0" name="port" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="protocol" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="proxyPort" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ClusterContext">
                <xs:sequence>
                    <xs:element minOccurs="0" name="cartridgeType" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="lbCluster" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="payload" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax25:Properties"/>
                    <xs:element minOccurs="0" name="timeoutInMillis" type="xs:long"/>
                    <xs:element minOccurs="0" name="volumeRequired" type="xs:boolean"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="volumes" nillable="true" type="ax23:Volume"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ContainerClusterContext">
                <xs:sequence>
                    <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax25:Properties"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CartridgeConfig">
                <xs:sequence>
                    <xs:element minOccurs="0" name="baseDir" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="container" nillable="true" type="ax23:Container"/>
                    <xs:element minOccurs="0" name="defaultAutoscalingPolicy" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="defaultDeploymentPolicy" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="deployerType" nillable="true" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="deploymentDirs" nillable="true"
                                type="xs:string"/>
                    <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="exportingProperties" nillable="true"
                                type="xs:string"/>
                    <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="iaasConfigs" nillable="true"
                                type="ax23:IaasConfig"/>
                    <xs:element minOccurs="0" name="isPublic" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="lbConfig" nillable="true" type="ax23:LoadbalancerConfig"/>
                    <xs:element minOccurs="0" name="multiTenant" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="persistence" nillable="true" type="ax23:Persistence"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="portMappings" nillable="true"
                                type="ax23:PortMapping"/>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax25:Properties"/>
                    <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="serviceGroup" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Container">
                <xs:sequence>
                    <xs:element minOccurs="0" name="dockerFileRepo" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="imageName" nillable="true" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="IaasConfig">
                <xs:sequence>
                    <xs:element minOccurs="0" name="className" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="credential" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="identity" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="imageId" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="maxInstanceLimit" type="xs:int"/>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="networkInterfaces" nillable="true" type="ax23:NetworkInterfaces"/>
                    <xs:element minOccurs="0" name="payload" nillable="true" type="xs:base64Binary"/>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax25:Properties"/>
                    <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="NetworkInterfaces">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="networkInterfaces" nillable="true"
                                type="ax23:NetworkInterface"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="NetworkInterface">
                <xs:sequence>
                    <xs:element minOccurs="0" name="fixedIp" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="floatingNetworks" nillable="true" type="ax23:FloatingNetworks"/>
                    <xs:element minOccurs="0" name="networkUuid" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="portUuid" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="FloatingNetworks">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="floatingNetworks" nillable="true"
                                type="ax23:FloatingNetwork"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="FloatingNetwork">
                <xs:sequence>
                    <xs:element minOccurs="0" name="floatingIP" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="networkUuid" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ApplicationClusterContext">
                <xs:sequence>
                    <xs:element minOccurs="0" name="autoscalePolicyName" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="cartridgeType" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="deploymentPolicyName" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="lbCluster" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax25:Properties"/>
                    <xs:element minOccurs="0" name="tenantRange" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="textPayload" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
    </wsdl:types>
    <wsdl:message name="updateKubernetesMasterRequest">
        <wsdl:part name="parameters" element="ns:updateKubernetesMaster"/>
    </wsdl:message>
    <wsdl:message name="updateKubernetesMasterResponse">
        <wsdl:part name="parameters" element="ns:updateKubernetesMasterResponse"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidKubernetesMasterException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidKubernetesMasterException"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceNonExistingKubernetesMasterException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceNonExistingKubernetesMasterException"/>
    </wsdl:message>
    <wsdl:message name="addKubernetesGroupRequest">
        <wsdl:part name="parameters" element="ns:addKubernetesGroup"/>
    </wsdl:message>
    <wsdl:message name="addKubernetesGroupResponse">
        <wsdl:part name="parameters" element="ns:addKubernetesGroupResponse"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidKubernetesGroupException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidKubernetesGroupException"/>
    </wsdl:message>
    <wsdl:message name="validatePartitionRequest">
        <wsdl:part name="parameters" element="ns:validatePartition"/>
    </wsdl:message>
    <wsdl:message name="validatePartitionResponse">
        <wsdl:part name="parameters" element="ns:validatePartitionResponse"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidPartitionException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidPartitionException"/>
    </wsdl:message>
    <wsdl:message name="createApplicationClustersRequest">
        <wsdl:part name="parameters" element="ns:createApplicationClusters"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceApplicationClusterRegistrationException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceApplicationClusterRegistrationException"/>
    </wsdl:message>
    <wsdl:message name="terminateContainerRequest">
        <wsdl:part name="parameters" element="ns:terminateContainer"/>
    </wsdl:message>
    <wsdl:message name="terminateContainerResponse">
        <wsdl:part name="parameters" element="ns:terminateContainerResponse"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceMemberTerminationFailedException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceMemberTerminationFailedException"/>
    </wsdl:message>
    <wsdl:message name="validateDeploymentPolicyRequest">
        <wsdl:part name="parameters" element="ns:validateDeploymentPolicy"/>
    </wsdl:message>
    <wsdl:message name="validateDeploymentPolicyResponse">
        <wsdl:part name="parameters" element="ns:validateDeploymentPolicyResponse"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidCartridgeTypeException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidCartridgeTypeException"/>
    </wsdl:message>
    <wsdl:message name="getServiceGroupCartridgesRequest">
        <wsdl:part name="parameters" element="ns:getServiceGroupCartridges"/>
    </wsdl:message>
    <wsdl:message name="getServiceGroupCartridgesResponse">
        <wsdl:part name="parameters" element="ns:getServiceGroupCartridgesResponse"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidServiceGroupException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidServiceGroupException"/>
    </wsdl:message>
    <wsdl:message name="getMasterForKubernetesGroupRequest">
        <wsdl:part name="parameters" element="ns:getMasterForKubernetesGroup"/>
    </wsdl:message>
    <wsdl:message name="getMasterForKubernetesGroupResponse">
        <wsdl:part name="parameters" element="ns:getMasterForKubernetesGroupResponse"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceNonExistingKubernetesGroupException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceNonExistingKubernetesGroupException"/>
    </wsdl:message>
    <wsdl:message name="startContainersRequest">
        <wsdl:part name="parameters" element="ns:startContainers"/>
    </wsdl:message>
    <wsdl:message name="startContainersResponse">
        <wsdl:part name="parameters" element="ns:startContainersResponse"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceUnregisteredCartridgeException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceUnregisteredCartridgeException"/>
    </wsdl:message>
    <wsdl:message name="registerServiceRequest">
        <wsdl:part name="parameters" element="ns:registerService"/>
    </wsdl:message>
    <wsdl:message name="registerServiceResponse">
        <wsdl:part name="parameters" element="ns:registerServiceResponse"/>
    </wsdl:message>
    <wsdl:message name="terminateInstanceRequest">
        <wsdl:part name="parameters" element="ns:terminateInstance"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidMemberException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidMemberException"/>
    </wsdl:message>
    <wsdl:message name="getServiceGroupDependenciesRequest">
        <wsdl:part name="parameters" element="ns:getServiceGroupDependencies"/>
    </wsdl:message>
    <wsdl:message name="getServiceGroupDependenciesResponse">
        <wsdl:part name="parameters" element="ns:getServiceGroupDependenciesResponse"/>
    </wsdl:message>
    <wsdl:message name="getServiceGroupSubGroupsRequest">
        <wsdl:part name="parameters" element="ns:getServiceGroupSubGroups"/>
    </wsdl:message>
    <wsdl:message name="getServiceGroupSubGroupsResponse">
        <wsdl:part name="parameters" element="ns:getServiceGroupSubGroupsResponse"/>
    </wsdl:message>
    <wsdl:message name="getServiceGroupRequest">
        <wsdl:part name="parameters" element="ns:getServiceGroup"/>
    </wsdl:message>
    <wsdl:message name="getServiceGroupResponse">
        <wsdl:part name="parameters" element="ns:getServiceGroupResponse"/>
    </wsdl:message>
    <wsdl:message name="removeKubernetesGroupRequest">
        <wsdl:part name="parameters" element="ns:removeKubernetesGroup"/>
    </wsdl:message>
    <wsdl:message name="removeKubernetesGroupResponse">
        <wsdl:part name="parameters" element="ns:removeKubernetesGroupResponse"/>
    </wsdl:message>
    <wsdl:message name="deployCartridgeDefinitionRequest">
        <wsdl:part name="parameters" element="ns:deployCartridgeDefinition"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidCartridgeDefinitionException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidCartridgeDefinitionException"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidIaasProviderException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidIaasProviderException"/>
    </wsdl:message>
    <wsdl:message name="getCartridgeInfoRequest">
        <wsdl:part name="parameters" element="ns:getCartridgeInfo"/>
    </wsdl:message>
    <wsdl:message name="getCartridgeInfoResponse">
        <wsdl:part name="parameters" element="ns:getCartridgeInfoResponse"/>
    </wsdl:message>
    <wsdl:message name="undeployServiceGroupRequest">
        <wsdl:part name="parameters" element="ns:undeployServiceGroup"/>
    </wsdl:message>
    <wsdl:message name="addKubernetesHostRequest">
        <wsdl:part name="parameters" element="ns:addKubernetesHost"/>
    </wsdl:message>
    <wsdl:message name="addKubernetesHostResponse">
        <wsdl:part name="parameters" element="ns:addKubernetesHostResponse"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidKubernetesHostException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidKubernetesHostException"/>
    </wsdl:message>
    <wsdl:message name="terminateAllContainersRequest">
        <wsdl:part name="parameters" element="ns:terminateAllContainers"/>
    </wsdl:message>
    <wsdl:message name="terminateAllContainersResponse">
        <wsdl:part name="parameters" element="ns:terminateAllContainersResponse"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidClusterException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidClusterException"/>
    </wsdl:message>
    <wsdl:message name="createClusterInstanceRequest">
        <wsdl:part name="parameters" element="ns:createClusterInstance"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceClusterInstanceCreationException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceClusterInstanceCreationException"/>
    </wsdl:message>
    <wsdl:message name="unregisterServiceRequest">
        <wsdl:part name="parameters" element="ns:unregisterService"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceUnregisteredClusterException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceUnregisteredClusterException"/>
    </wsdl:message>
    <wsdl:message name="getKubernetesGroupRequest">
        <wsdl:part name="parameters" element="ns:getKubernetesGroup"/>
    </wsdl:message>
    <wsdl:message name="getKubernetesGroupResponse">
        <wsdl:part name="parameters" element="ns:getKubernetesGroupResponse"/>
    </wsdl:message>
    <wsdl:message name="undeployCartridgeDefinitionRequest">
        <wsdl:part name="parameters" element="ns:undeployCartridgeDefinition"/>
    </wsdl:message>
    <wsdl:message name="removeKubernetesHostRequest">
        <wsdl:part name="parameters" element="ns:removeKubernetesHost"/>
    </wsdl:message>
    <wsdl:message name="removeKubernetesHostResponse">
        <wsdl:part name="parameters" element="ns:removeKubernetesHostResponse"/>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceNonExistingKubernetesHostException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceNonExistingKubernetesHostException"/>
    </wsdl:message>
    <wsdl:message name="terminateAllInstancesRequest">
        <wsdl:part name="parameters" element="ns:terminateAllInstances"/>
    </wsdl:message>
    <wsdl:message name="unregisterDockerServiceRequest">
        <wsdl:part name="parameters" element="ns:unregisterDockerService"/>
    </wsdl:message>
    <wsdl:message name="getRegisteredCartridgesRequest">
        <wsdl:part name="parameters" element="ns:getRegisteredCartridges"/>
    </wsdl:message>
    <wsdl:message name="getRegisteredCartridgesResponse">
        <wsdl:part name="parameters" element="ns:getRegisteredCartridgesResponse"/>
    </wsdl:message>
    <wsdl:message name="startInstanceRequest">
        <wsdl:part name="parameters" element="ns:startInstance"/>
    </wsdl:message>
    <wsdl:message name="startInstanceResponse">
        <wsdl:part name="parameters" element="ns:startInstanceResponse"/>
    </wsdl:message>
    <wsdl:message name="getAllKubernetesGroupsRequest">
        <wsdl:part name="parameters" element="ns:getAllKubernetesGroups"/>
    </wsdl:message>
    <wsdl:message name="getAllKubernetesGroupsResponse">
        <wsdl:part name="parameters" element="ns:getAllKubernetesGroupsResponse"/>
    </wsdl:message>
    <wsdl:message name="updateContainersRequest">
        <wsdl:part name="parameters" element="ns:updateContainers"/>
    </wsdl:message>
    <wsdl:message name="updateContainersResponse">
        <wsdl:part name="parameters" element="ns:updateContainersResponse"/>
    </wsdl:message>
    <wsdl:message name="updateClusterStatusRequest">
        <wsdl:part name="parameters" element="ns:updateClusterStatus"/>
    </wsdl:message>
    <wsdl:message name="getClusterContextRequest">
        <wsdl:part name="parameters" element="ns:getClusterContext"/>
    </wsdl:message>
    <wsdl:message name="getClusterContextResponse">
        <wsdl:part name="parameters" element="ns:getClusterContextResponse"/>
    </wsdl:message>
    <wsdl:message name="deployServiceGroupRequest">
        <wsdl:part name="parameters" element="ns:deployServiceGroup"/>
    </wsdl:message>
    <wsdl:message name="updateKubernetesHostRequest">
        <wsdl:part name="parameters" element="ns:updateKubernetesHost"/>
    </wsdl:message>
    <wsdl:message name="updateKubernetesHostResponse">
        <wsdl:part name="parameters" element="ns:updateKubernetesHostResponse"/>
    </wsdl:message>
    <wsdl:message name="getHostsForKubernetesGroupRequest">
        <wsdl:part name="parameters" element="ns:getHostsForKubernetesGroup"/>
    </wsdl:message>
    <wsdl:message name="getHostsForKubernetesGroupResponse">
        <wsdl:part name="parameters" element="ns:getHostsForKubernetesGroupResponse"/>
    </wsdl:message>
    <wsdl:portType name="CloudControllerServicePortType">
        <wsdl:operation name="updateKubernetesMaster">
            <wsdl:input message="ns:updateKubernetesMasterRequest" wsaw:Action="urn:updateKubernetesMaster"/>
            <wsdl:output message="ns:updateKubernetesMasterResponse" wsaw:Action="urn:updateKubernetesMasterResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidKubernetesMasterException"
                        name="CloudControllerServiceInvalidKubernetesMasterException"
                        wsaw:Action="urn:updateKubernetesMasterCloudControllerServiceInvalidKubernetesMasterException"/>
            <wsdl:fault message="ns:CloudControllerServiceNonExistingKubernetesMasterException"
                        name="CloudControllerServiceNonExistingKubernetesMasterException"
                        wsaw:Action="urn:updateKubernetesMasterCloudControllerServiceNonExistingKubernetesMasterException"/>
        </wsdl:operation>
        <wsdl:operation name="addKubernetesGroup">
            <wsdl:input message="ns:addKubernetesGroupRequest" wsaw:Action="urn:addKubernetesGroup"/>
            <wsdl:output message="ns:addKubernetesGroupResponse" wsaw:Action="urn:addKubernetesGroupResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidKubernetesGroupException"
                        name="CloudControllerServiceInvalidKubernetesGroupException"
                        wsaw:Action="urn:addKubernetesGroupCloudControllerServiceInvalidKubernetesGroupException"/>
        </wsdl:operation>
        <wsdl:operation name="validatePartition">
            <wsdl:input message="ns:validatePartitionRequest" wsaw:Action="urn:validatePartition"/>
            <wsdl:output message="ns:validatePartitionResponse" wsaw:Action="urn:validatePartitionResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidPartitionException"
                        name="CloudControllerServiceInvalidPartitionException"
                        wsaw:Action="urn:validatePartitionCloudControllerServiceInvalidPartitionException"/>
        </wsdl:operation>
        <wsdl:operation name="createApplicationClusters">
            <wsdl:input message="ns:createApplicationClustersRequest" wsaw:Action="urn:createApplicationClusters"/>
            <wsdl:fault message="ns:CloudControllerServiceApplicationClusterRegistrationException"
                        name="CloudControllerServiceApplicationClusterRegistrationException"
                        wsaw:Action="urn:createApplicationClustersCloudControllerServiceApplicationClusterRegistrationException"/>
        </wsdl:operation>
        <wsdl:operation name="terminateContainer">
            <wsdl:input message="ns:terminateContainerRequest" wsaw:Action="urn:terminateContainer"/>
            <wsdl:output message="ns:terminateContainerResponse" wsaw:Action="urn:terminateContainerResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceMemberTerminationFailedException"
                        name="CloudControllerServiceMemberTerminationFailedException"
                        wsaw:Action="urn:terminateContainerCloudControllerServiceMemberTerminationFailedException"/>
        </wsdl:operation>
        <wsdl:operation name="validateDeploymentPolicy">
            <wsdl:input message="ns:validateDeploymentPolicyRequest" wsaw:Action="urn:validateDeploymentPolicy"/>
            <wsdl:output message="ns:validateDeploymentPolicyResponse"
                         wsaw:Action="urn:validateDeploymentPolicyResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidPartitionException"
                        name="CloudControllerServiceInvalidPartitionException"
                        wsaw:Action="urn:validateDeploymentPolicyCloudControllerServiceInvalidPartitionException"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidCartridgeTypeException"
                        name="CloudControllerServiceInvalidCartridgeTypeException"
                        wsaw:Action="urn:validateDeploymentPolicyCloudControllerServiceInvalidCartridgeTypeException"/>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupCartridges">
            <wsdl:input message="ns:getServiceGroupCartridgesRequest" wsaw:Action="urn:getServiceGroupCartridges"/>
            <wsdl:output message="ns:getServiceGroupCartridgesResponse"
                         wsaw:Action="urn:getServiceGroupCartridgesResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidServiceGroupException"
                        name="CloudControllerServiceInvalidServiceGroupException"
                        wsaw:Action="urn:getServiceGroupCartridgesCloudControllerServiceInvalidServiceGroupException"/>
        </wsdl:operation>
        <wsdl:operation name="getMasterForKubernetesGroup">
            <wsdl:input message="ns:getMasterForKubernetesGroupRequest" wsaw:Action="urn:getMasterForKubernetesGroup"/>
            <wsdl:output message="ns:getMasterForKubernetesGroupResponse"
                         wsaw:Action="urn:getMasterForKubernetesGroupResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceNonExistingKubernetesGroupException"
                        name="CloudControllerServiceNonExistingKubernetesGroupException"
                        wsaw:Action="urn:getMasterForKubernetesGroupCloudControllerServiceNonExistingKubernetesGroupException"/>
        </wsdl:operation>
        <wsdl:operation name="startContainers">
            <wsdl:input message="ns:startContainersRequest" wsaw:Action="urn:startContainers"/>
            <wsdl:output message="ns:startContainersResponse" wsaw:Action="urn:startContainersResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceUnregisteredCartridgeException"
                        name="CloudControllerServiceUnregisteredCartridgeException"
                        wsaw:Action="urn:startContainersCloudControllerServiceUnregisteredCartridgeException"/>
        </wsdl:operation>
        <wsdl:operation name="registerService">
            <wsdl:input message="ns:registerServiceRequest" wsaw:Action="urn:registerService"/>
            <wsdl:output message="ns:registerServiceResponse" wsaw:Action="urn:registerServiceResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceUnregisteredCartridgeException"
                        name="CloudControllerServiceUnregisteredCartridgeException"
                        wsaw:Action="urn:registerServiceCloudControllerServiceUnregisteredCartridgeException"/>
        </wsdl:operation>
        <wsdl:operation name="terminateInstance">
            <wsdl:input message="ns:terminateInstanceRequest" wsaw:Action="urn:terminateInstance"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidMemberException"
                        name="CloudControllerServiceInvalidMemberException"
                        wsaw:Action="urn:terminateInstanceCloudControllerServiceInvalidMemberException"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidCartridgeTypeException"
                        name="CloudControllerServiceInvalidCartridgeTypeException"
                        wsaw:Action="urn:terminateInstanceCloudControllerServiceInvalidCartridgeTypeException"/>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupDependencies">
            <wsdl:input message="ns:getServiceGroupDependenciesRequest" wsaw:Action="urn:getServiceGroupDependencies"/>
            <wsdl:output message="ns:getServiceGroupDependenciesResponse"
                         wsaw:Action="urn:getServiceGroupDependenciesResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidServiceGroupException"
                        name="CloudControllerServiceInvalidServiceGroupException"
                        wsaw:Action="urn:getServiceGroupDependenciesCloudControllerServiceInvalidServiceGroupException"/>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupSubGroups">
            <wsdl:input message="ns:getServiceGroupSubGroupsRequest" wsaw:Action="urn:getServiceGroupSubGroups"/>
            <wsdl:output message="ns:getServiceGroupSubGroupsResponse"
                         wsaw:Action="urn:getServiceGroupSubGroupsResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidServiceGroupException"
                        name="CloudControllerServiceInvalidServiceGroupException"
                        wsaw:Action="urn:getServiceGroupSubGroupsCloudControllerServiceInvalidServiceGroupException"/>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroup">
            <wsdl:input message="ns:getServiceGroupRequest" wsaw:Action="urn:getServiceGroup"/>
            <wsdl:output message="ns:getServiceGroupResponse" wsaw:Action="urn:getServiceGroupResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidServiceGroupException"
                        name="CloudControllerServiceInvalidServiceGroupException"
                        wsaw:Action="urn:getServiceGroupCloudControllerServiceInvalidServiceGroupException"/>
        </wsdl:operation>
        <wsdl:operation name="removeKubernetesGroup">
            <wsdl:input message="ns:removeKubernetesGroupRequest" wsaw:Action="urn:removeKubernetesGroup"/>
            <wsdl:output message="ns:removeKubernetesGroupResponse" wsaw:Action="urn:removeKubernetesGroupResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceNonExistingKubernetesGroupException"
                        name="CloudControllerServiceNonExistingKubernetesGroupException"
                        wsaw:Action="urn:removeKubernetesGroupCloudControllerServiceNonExistingKubernetesGroupException"/>
        </wsdl:operation>
        <wsdl:operation name="deployCartridgeDefinition">
            <wsdl:input message="ns:deployCartridgeDefinitionRequest" wsaw:Action="urn:deployCartridgeDefinition"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidCartridgeDefinitionException"
                        name="CloudControllerServiceInvalidCartridgeDefinitionException"
                        wsaw:Action="urn:deployCartridgeDefinitionCloudControllerServiceInvalidCartridgeDefinitionException"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidIaasProviderException"
                        name="CloudControllerServiceInvalidIaasProviderException"
                        wsaw:Action="urn:deployCartridgeDefinitionCloudControllerServiceInvalidIaasProviderException"/>
        </wsdl:operation>
        <wsdl:operation name="getCartridgeInfo">
            <wsdl:input message="ns:getCartridgeInfoRequest" wsaw:Action="urn:getCartridgeInfo"/>
            <wsdl:output message="ns:getCartridgeInfoResponse" wsaw:Action="urn:getCartridgeInfoResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceUnregisteredCartridgeException"
                        name="CloudControllerServiceUnregisteredCartridgeException"
                        wsaw:Action="urn:getCartridgeInfoCloudControllerServiceUnregisteredCartridgeException"/>
        </wsdl:operation>
        <wsdl:operation name="undeployServiceGroup">
            <wsdl:input message="ns:undeployServiceGroupRequest" wsaw:Action="urn:undeployServiceGroup"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidServiceGroupException"
                        name="CloudControllerServiceInvalidServiceGroupException"
                        wsaw:Action="urn:undeployServiceGroupCloudControllerServiceInvalidServiceGroupException"/>
        </wsdl:operation>
        <wsdl:operation name="addKubernetesHost">
            <wsdl:input message="ns:addKubernetesHostRequest" wsaw:Action="urn:addKubernetesHost"/>
            <wsdl:output message="ns:addKubernetesHostResponse" wsaw:Action="urn:addKubernetesHostResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidKubernetesHostException"
                        name="CloudControllerServiceInvalidKubernetesHostException"
                        wsaw:Action="urn:addKubernetesHostCloudControllerServiceInvalidKubernetesHostException"/>
            <wsdl:fault message="ns:CloudControllerServiceNonExistingKubernetesGroupException"
                        name="CloudControllerServiceNonExistingKubernetesGroupException"
                        wsaw:Action="urn:addKubernetesHostCloudControllerServiceNonExistingKubernetesGroupException"/>
        </wsdl:operation>
        <wsdl:operation name="terminateAllContainers">
            <wsdl:input message="ns:terminateAllContainersRequest" wsaw:Action="urn:terminateAllContainers"/>
            <wsdl:output message="ns:terminateAllContainersResponse" wsaw:Action="urn:terminateAllContainersResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidClusterException"
                        name="CloudControllerServiceInvalidClusterException"
                        wsaw:Action="urn:terminateAllContainersCloudControllerServiceInvalidClusterException"/>
        </wsdl:operation>
        <wsdl:operation name="createClusterInstance">
            <wsdl:input message="ns:createClusterInstanceRequest" wsaw:Action="urn:createClusterInstance"/>
            <wsdl:fault message="ns:CloudControllerServiceClusterInstanceCreationException"
                        name="CloudControllerServiceClusterInstanceCreationException"
                        wsaw:Action="urn:createClusterInstanceCloudControllerServiceClusterInstanceCreationException"/>
        </wsdl:operation>
        <wsdl:operation name="unregisterService">
            <wsdl:input message="ns:unregisterServiceRequest" wsaw:Action="urn:unregisterService"/>
            <wsdl:fault message="ns:CloudControllerServiceUnregisteredClusterException"
                        name="CloudControllerServiceUnregisteredClusterException"
                        wsaw:Action="urn:unregisterServiceCloudControllerServiceUnregisteredClusterException"/>
        </wsdl:operation>
        <wsdl:operation name="getKubernetesGroup">
            <wsdl:input message="ns:getKubernetesGroupRequest" wsaw:Action="urn:getKubernetesGroup"/>
            <wsdl:output message="ns:getKubernetesGroupResponse" wsaw:Action="urn:getKubernetesGroupResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceNonExistingKubernetesGroupException"
                        name="CloudControllerServiceNonExistingKubernetesGroupException"
                        wsaw:Action="urn:getKubernetesGroupCloudControllerServiceNonExistingKubernetesGroupException"/>
        </wsdl:operation>
        <wsdl:operation name="undeployCartridgeDefinition">
            <wsdl:input message="ns:undeployCartridgeDefinitionRequest" wsaw:Action="urn:undeployCartridgeDefinition"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidCartridgeTypeException"
                        name="CloudControllerServiceInvalidCartridgeTypeException"
                        wsaw:Action="urn:undeployCartridgeDefinitionCloudControllerServiceInvalidCartridgeTypeException"/>
        </wsdl:operation>
        <wsdl:operation name="removeKubernetesHost">
            <wsdl:input message="ns:removeKubernetesHostRequest" wsaw:Action="urn:removeKubernetesHost"/>
            <wsdl:output message="ns:removeKubernetesHostResponse" wsaw:Action="urn:removeKubernetesHostResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceNonExistingKubernetesHostException"
                        name="CloudControllerServiceNonExistingKubernetesHostException"
                        wsaw:Action="urn:removeKubernetesHostCloudControllerServiceNonExistingKubernetesHostException"/>
        </wsdl:operation>
        <wsdl:operation name="terminateAllInstances">
            <wsdl:input message="ns:terminateAllInstancesRequest" wsaw:Action="urn:terminateAllInstances"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidClusterException"
                        name="CloudControllerServiceInvalidClusterException"
                        wsaw:Action="urn:terminateAllInstancesCloudControllerServiceInvalidClusterException"/>
        </wsdl:operation>
        <wsdl:operation name="unregisterDockerService">
            <wsdl:input message="ns:unregisterDockerServiceRequest" wsaw:Action="urn:unregisterDockerService"/>
            <wsdl:fault message="ns:CloudControllerServiceUnregisteredClusterException"
                        name="CloudControllerServiceUnregisteredClusterException"
                        wsaw:Action="urn:unregisterDockerServiceCloudControllerServiceUnregisteredClusterException"/>
        </wsdl:operation>
        <wsdl:operation name="getRegisteredCartridges">
            <wsdl:input message="ns:getRegisteredCartridgesRequest" wsaw:Action="urn:getRegisteredCartridges"/>
            <wsdl:output message="ns:getRegisteredCartridgesResponse"
                         wsaw:Action="urn:getRegisteredCartridgesResponse"/>
        </wsdl:operation>
        <wsdl:operation name="startInstance">
            <wsdl:input message="ns:startInstanceRequest" wsaw:Action="urn:startInstance"/>
            <wsdl:output message="ns:startInstanceResponse" wsaw:Action="urn:startInstanceResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceUnregisteredCartridgeException"
                        name="CloudControllerServiceUnregisteredCartridgeException"
                        wsaw:Action="urn:startInstanceCloudControllerServiceUnregisteredCartridgeException"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidIaasProviderException"
                        name="CloudControllerServiceInvalidIaasProviderException"
                        wsaw:Action="urn:startInstanceCloudControllerServiceInvalidIaasProviderException"/>
        </wsdl:operation>
        <wsdl:operation name="getAllKubernetesGroups">
            <wsdl:input message="ns:getAllKubernetesGroupsRequest" wsaw:Action="urn:getAllKubernetesGroups"/>
            <wsdl:output message="ns:getAllKubernetesGroupsResponse" wsaw:Action="urn:getAllKubernetesGroupsResponse"/>
        </wsdl:operation>
        <wsdl:operation name="updateContainers">
            <wsdl:input message="ns:updateContainersRequest" wsaw:Action="urn:updateContainers"/>
            <wsdl:output message="ns:updateContainersResponse" wsaw:Action="urn:updateContainersResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceUnregisteredCartridgeException"
                        name="CloudControllerServiceUnregisteredCartridgeException"
                        wsaw:Action="urn:updateContainersCloudControllerServiceUnregisteredCartridgeException"/>
        </wsdl:operation>
        <wsdl:operation name="updateClusterStatus">
            <wsdl:input message="ns:updateClusterStatusRequest" wsaw:Action="urn:updateClusterStatus"/>
        </wsdl:operation>
        <wsdl:operation name="getClusterContext">
            <wsdl:input message="ns:getClusterContextRequest" wsaw:Action="urn:getClusterContext"/>
            <wsdl:output message="ns:getClusterContextResponse" wsaw:Action="urn:getClusterContextResponse"/>
        </wsdl:operation>
        <wsdl:operation name="deployServiceGroup">
            <wsdl:input message="ns:deployServiceGroupRequest" wsaw:Action="urn:deployServiceGroup"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidServiceGroupException"
                        name="CloudControllerServiceInvalidServiceGroupException"
                        wsaw:Action="urn:deployServiceGroupCloudControllerServiceInvalidServiceGroupException"/>
        </wsdl:operation>
        <wsdl:operation name="updateKubernetesHost">
            <wsdl:input message="ns:updateKubernetesHostRequest" wsaw:Action="urn:updateKubernetesHost"/>
            <wsdl:output message="ns:updateKubernetesHostResponse" wsaw:Action="urn:updateKubernetesHostResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceInvalidKubernetesHostException"
                        name="CloudControllerServiceInvalidKubernetesHostException"
                        wsaw:Action="urn:updateKubernetesHostCloudControllerServiceInvalidKubernetesHostException"/>
            <wsdl:fault message="ns:CloudControllerServiceNonExistingKubernetesHostException"
                        name="CloudControllerServiceNonExistingKubernetesHostException"
                        wsaw:Action="urn:updateKubernetesHostCloudControllerServiceNonExistingKubernetesHostException"/>
        </wsdl:operation>
        <wsdl:operation name="getHostsForKubernetesGroup">
            <wsdl:input message="ns:getHostsForKubernetesGroupRequest" wsaw:Action="urn:getHostsForKubernetesGroup"/>
            <wsdl:output message="ns:getHostsForKubernetesGroupResponse"
                         wsaw:Action="urn:getHostsForKubernetesGroupResponse"/>
            <wsdl:fault message="ns:CloudControllerServiceNonExistingKubernetesGroupException"
                        name="CloudControllerServiceNonExistingKubernetesGroupException"
                        wsaw:Action="urn:getHostsForKubernetesGroupCloudControllerServiceNonExistingKubernetesGroupException"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="CloudControllerServiceSoap11Binding" type="ns:CloudControllerServicePortType">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
        <wsdl:operation name="addKubernetesGroup">
            <soap:operation soapAction="urn:addKubernetesGroup" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidKubernetesGroupException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidKubernetesGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateKubernetesMaster">
            <soap:operation soapAction="urn:updateKubernetesMaster" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidKubernetesMasterException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidKubernetesMasterException"/>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesMasterException">
                <soap:fault use="literal" name="CloudControllerServiceNonExistingKubernetesMasterException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="validatePartition">
            <soap:operation soapAction="urn:validatePartition" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidPartitionException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidPartitionException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createApplicationClusters">
            <soap:operation soapAction="urn:createApplicationClusters" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceApplicationClusterRegistrationException">
                <soap:fault use="literal" name="CloudControllerServiceApplicationClusterRegistrationException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="terminateContainer">
            <soap:operation soapAction="urn:terminateContainer" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceMemberTerminationFailedException">
                <soap:fault use="literal" name="CloudControllerServiceMemberTerminationFailedException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="validateDeploymentPolicy">
            <soap:operation soapAction="urn:validateDeploymentPolicy" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidPartitionException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidPartitionException"/>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeTypeException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidCartridgeTypeException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupCartridges">
            <soap:operation soapAction="urn:getServiceGroupCartridges" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="startContainers">
            <soap:operation soapAction="urn:startContainers" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceUnregisteredCartridgeException">
                <soap:fault use="literal" name="CloudControllerServiceUnregisteredCartridgeException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getMasterForKubernetesGroup">
            <soap:operation soapAction="urn:getMasterForKubernetesGroup" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesGroupException">
                <soap:fault use="literal" name="CloudControllerServiceNonExistingKubernetesGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="registerService">
            <soap:operation soapAction="urn:registerService" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceUnregisteredCartridgeException">
                <soap:fault use="literal" name="CloudControllerServiceUnregisteredCartridgeException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="terminateInstance">
            <soap:operation soapAction="urn:terminateInstance" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidMemberException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidMemberException"/>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeTypeException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidCartridgeTypeException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupDependencies">
            <soap:operation soapAction="urn:getServiceGroupDependencies" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupSubGroups">
            <soap:operation soapAction="urn:getServiceGroupSubGroups" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroup">
            <soap:operation soapAction="urn:getServiceGroup" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deployCartridgeDefinition">
            <soap:operation soapAction="urn:deployCartridgeDefinition" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeDefinitionException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidCartridgeDefinitionException"/>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidIaasProviderException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidIaasProviderException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeKubernetesGroup">
            <soap:operation soapAction="urn:removeKubernetesGroup" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesGroupException">
                <soap:fault use="literal" name="CloudControllerServiceNonExistingKubernetesGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="undeployServiceGroup">
            <soap:operation soapAction="urn:undeployServiceGroup" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getCartridgeInfo">
            <soap:operation soapAction="urn:getCartridgeInfo" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceUnregisteredCartridgeException">
                <soap:fault use="literal" name="CloudControllerServiceUnregisteredCartridgeException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addKubernetesHost">
            <soap:operation soapAction="urn:addKubernetesHost" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidKubernetesHostException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidKubernetesHostException"/>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesGroupException">
                <soap:fault use="literal" name="CloudControllerServiceNonExistingKubernetesGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="terminateAllContainers">
            <soap:operation soapAction="urn:terminateAllContainers" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidClusterException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidClusterException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="unregisterService">
            <soap:operation soapAction="urn:unregisterService" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceUnregisteredClusterException">
                <soap:fault use="literal" name="CloudControllerServiceUnregisteredClusterException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createClusterInstance">
            <soap:operation soapAction="urn:createClusterInstance" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceClusterInstanceCreationException">
                <soap:fault use="literal" name="CloudControllerServiceClusterInstanceCreationException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getKubernetesGroup">
            <soap:operation soapAction="urn:getKubernetesGroup" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesGroupException">
                <soap:fault use="literal" name="CloudControllerServiceNonExistingKubernetesGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="undeployCartridgeDefinition">
            <soap:operation soapAction="urn:undeployCartridgeDefinition" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeTypeException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidCartridgeTypeException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeKubernetesHost">
            <soap:operation soapAction="urn:removeKubernetesHost" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesHostException">
                <soap:fault use="literal" name="CloudControllerServiceNonExistingKubernetesHostException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="terminateAllInstances">
            <soap:operation soapAction="urn:terminateAllInstances" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidClusterException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidClusterException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getRegisteredCartridges">
            <soap:operation soapAction="urn:getRegisteredCartridges" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="unregisterDockerService">
            <soap:operation soapAction="urn:unregisterDockerService" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceUnregisteredClusterException">
                <soap:fault use="literal" name="CloudControllerServiceUnregisteredClusterException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="startInstance">
            <soap:operation soapAction="urn:startInstance" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidIaasProviderException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidIaasProviderException"/>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceUnregisteredCartridgeException">
                <soap:fault use="literal" name="CloudControllerServiceUnregisteredCartridgeException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getAllKubernetesGroups">
            <soap:operation soapAction="urn:getAllKubernetesGroups" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateContainers">
            <soap:operation soapAction="urn:updateContainers" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceUnregisteredCartridgeException">
                <soap:fault use="literal" name="CloudControllerServiceUnregisteredCartridgeException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getClusterContext">
            <soap:operation soapAction="urn:getClusterContext" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateClusterStatus">
            <soap:operation soapAction="urn:updateClusterStatus" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="deployServiceGroup">
            <soap:operation soapAction="urn:deployServiceGroup" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateKubernetesHost">
            <soap:operation soapAction="urn:updateKubernetesHost" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidKubernetesHostException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidKubernetesHostException"/>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesHostException">
                <soap:fault use="literal" name="CloudControllerServiceNonExistingKubernetesHostException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getHostsForKubernetesGroup">
            <soap:operation soapAction="urn:getHostsForKubernetesGroup" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesGroupException">
                <soap:fault use="literal" name="CloudControllerServiceNonExistingKubernetesGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="CloudControllerServiceSoap12Binding" type="ns:CloudControllerServicePortType">
        <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
        <wsdl:operation name="addKubernetesGroup">
            <soap12:operation soapAction="urn:addKubernetesGroup" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidKubernetesGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidKubernetesGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateKubernetesMaster">
            <soap12:operation soapAction="urn:updateKubernetesMaster" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidKubernetesMasterException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidKubernetesMasterException"/>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesMasterException">
                <soap12:fault use="literal" name="CloudControllerServiceNonExistingKubernetesMasterException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="validatePartition">
            <soap12:operation soapAction="urn:validatePartition" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidPartitionException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidPartitionException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createApplicationClusters">
            <soap12:operation soapAction="urn:createApplicationClusters" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceApplicationClusterRegistrationException">
                <soap12:fault use="literal" name="CloudControllerServiceApplicationClusterRegistrationException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="terminateContainer">
            <soap12:operation soapAction="urn:terminateContainer" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceMemberTerminationFailedException">
                <soap12:fault use="literal" name="CloudControllerServiceMemberTerminationFailedException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="validateDeploymentPolicy">
            <soap12:operation soapAction="urn:validateDeploymentPolicy" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidPartitionException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidPartitionException"/>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeTypeException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidCartridgeTypeException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupCartridges">
            <soap12:operation soapAction="urn:getServiceGroupCartridges" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="startContainers">
            <soap12:operation soapAction="urn:startContainers" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceUnregisteredCartridgeException">
                <soap12:fault use="literal" name="CloudControllerServiceUnregisteredCartridgeException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getMasterForKubernetesGroup">
            <soap12:operation soapAction="urn:getMasterForKubernetesGroup" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceNonExistingKubernetesGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="registerService">
            <soap12:operation soapAction="urn:registerService" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceUnregisteredCartridgeException">
                <soap12:fault use="literal" name="CloudControllerServiceUnregisteredCartridgeException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="terminateInstance">
            <soap12:operation soapAction="urn:terminateInstance" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidMemberException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidMemberException"/>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeTypeException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidCartridgeTypeException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupDependencies">
            <soap12:operation soapAction="urn:getServiceGroupDependencies" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupSubGroups">
            <soap12:operation soapAction="urn:getServiceGroupSubGroups" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroup">
            <soap12:operation soapAction="urn:getServiceGroup" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deployCartridgeDefinition">
            <soap12:operation soapAction="urn:deployCartridgeDefinition" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeDefinitionException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidCartridgeDefinitionException"/>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidIaasProviderException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidIaasProviderException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeKubernetesGroup">
            <soap12:operation soapAction="urn:removeKubernetesGroup" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceNonExistingKubernetesGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="undeployServiceGroup">
            <soap12:operation soapAction="urn:undeployServiceGroup" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getCartridgeInfo">
            <soap12:operation soapAction="urn:getCartridgeInfo" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceUnregisteredCartridgeException">
                <soap12:fault use="literal" name="CloudControllerServiceUnregisteredCartridgeException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addKubernetesHost">
            <soap12:operation soapAction="urn:addKubernetesHost" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidKubernetesHostException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidKubernetesHostException"/>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceNonExistingKubernetesGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="terminateAllContainers">
            <soap12:operation soapAction="urn:terminateAllContainers" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidClusterException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidClusterException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="unregisterService">
            <soap12:operation soapAction="urn:unregisterService" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceUnregisteredClusterException">
                <soap12:fault use="literal" name="CloudControllerServiceUnregisteredClusterException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createClusterInstance">
            <soap12:operation soapAction="urn:createClusterInstance" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceClusterInstanceCreationException">
                <soap12:fault use="literal" name="CloudControllerServiceClusterInstanceCreationException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getKubernetesGroup">
            <soap12:operation soapAction="urn:getKubernetesGroup" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceNonExistingKubernetesGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="undeployCartridgeDefinition">
            <soap12:operation soapAction="urn:undeployCartridgeDefinition" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeTypeException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidCartridgeTypeException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeKubernetesHost">
            <soap12:operation soapAction="urn:removeKubernetesHost" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesHostException">
                <soap12:fault use="literal" name="CloudControllerServiceNonExistingKubernetesHostException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="terminateAllInstances">
            <soap12:operation soapAction="urn:terminateAllInstances" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidClusterException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidClusterException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getRegisteredCartridges">
            <soap12:operation soapAction="urn:getRegisteredCartridges" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="unregisterDockerService">
            <soap12:operation soapAction="urn:unregisterDockerService" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceUnregisteredClusterException">
                <soap12:fault use="literal" name="CloudControllerServiceUnregisteredClusterException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="startInstance">
            <soap12:operation soapAction="urn:startInstance" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidIaasProviderException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidIaasProviderException"/>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceUnregisteredCartridgeException">
                <soap12:fault use="literal" name="CloudControllerServiceUnregisteredCartridgeException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getAllKubernetesGroups">
            <soap12:operation soapAction="urn:getAllKubernetesGroups" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateContainers">
            <soap12:operation soapAction="urn:updateContainers" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceUnregisteredCartridgeException">
                <soap12:fault use="literal" name="CloudControllerServiceUnregisteredCartridgeException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getClusterContext">
            <soap12:operation soapAction="urn:getClusterContext" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateClusterStatus">
            <soap12:operation soapAction="urn:updateClusterStatus" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="deployServiceGroup">
            <soap12:operation soapAction="urn:deployServiceGroup" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateKubernetesHost">
            <soap12:operation soapAction="urn:updateKubernetesHost" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidKubernetesHostException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidKubernetesHostException"/>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesHostException">
                <soap12:fault use="literal" name="CloudControllerServiceNonExistingKubernetesHostException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getHostsForKubernetesGroup">
            <soap12:operation soapAction="urn:getHostsForKubernetesGroup" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceNonExistingKubernetesGroupException"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="CloudControllerServiceHttpBinding" type="ns:CloudControllerServicePortType">
        <http:binding verb="POST"/>
        <wsdl:operation name="addKubernetesGroup">
            <http:operation location="addKubernetesGroup"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateKubernetesMaster">
            <http:operation location="updateKubernetesMaster"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="validatePartition">
            <http:operation location="validatePartition"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="createApplicationClusters">
            <http:operation location="createApplicationClusters"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="terminateContainer">
            <http:operation location="terminateContainer"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="validateDeploymentPolicy">
            <http:operation location="validateDeploymentPolicy"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupCartridges">
            <http:operation location="getServiceGroupCartridges"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="startContainers">
            <http:operation location="startContainers"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getMasterForKubernetesGroup">
            <http:operation location="getMasterForKubernetesGroup"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="registerService">
            <http:operation location="registerService"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="terminateInstance">
            <http:operation location="terminateInstance"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupDependencies">
            <http:operation location="getServiceGroupDependencies"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupSubGroups">
            <http:operation location="getServiceGroupSubGroups"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroup">
            <http:operation location="getServiceGroup"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="deployCartridgeDefinition">
            <http:operation location="deployCartridgeDefinition"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="removeKubernetesGroup">
            <http:operation location="removeKubernetesGroup"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="undeployServiceGroup">
            <http:operation location="undeployServiceGroup"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getCartridgeInfo">
            <http:operation location="getCartridgeInfo"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="addKubernetesHost">
            <http:operation location="addKubernetesHost"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="terminateAllContainers">
            <http:operation location="terminateAllContainers"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="unregisterService">
            <http:operation location="unregisterService"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="createClusterInstance">
            <http:operation location="createClusterInstance"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getKubernetesGroup">
            <http:operation location="getKubernetesGroup"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="undeployCartridgeDefinition">
            <http:operation location="undeployCartridgeDefinition"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="removeKubernetesHost">
            <http:operation location="removeKubernetesHost"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="terminateAllInstances">
            <http:operation location="terminateAllInstances"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getRegisteredCartridges">
            <http:operation location="getRegisteredCartridges"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="unregisterDockerService">
            <http:operation location="unregisterDockerService"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="startInstance">
            <http:operation location="startInstance"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getAllKubernetesGroups">
            <http:operation location="getAllKubernetesGroups"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateContainers">
            <http:operation location="updateContainers"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getClusterContext">
            <http:operation location="getClusterContext"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateClusterStatus">
            <http:operation location="updateClusterStatus"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="deployServiceGroup">
            <http:operation location="deployServiceGroup"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="updateKubernetesHost">
            <http:operation location="updateKubernetesHost"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getHostsForKubernetesGroup">
            <http:operation location="getHostsForKubernetesGroup"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="CloudControllerService">
        <wsdl:port name="CloudControllerServiceHttpSoap11Endpoint" binding="ns:CloudControllerServiceSoap11Binding">
            <soap:address location="http://localhost:8080/axis2/services/CloudControllerService"/>
        </wsdl:port>
        <wsdl:port name="CloudControllerServiceHttpSoap12Endpoint" binding="ns:CloudControllerServiceSoap12Binding">
            <soap12:address location="http://localhost:8080/axis2/services/CloudControllerService"/>
        </wsdl:port>
        <wsdl:port name="CloudControllerServiceHttpEndpoint" binding="ns:CloudControllerServiceHttpBinding">
            <http:address location="http://localhost:8080/axis2/services/CloudControllerService"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>